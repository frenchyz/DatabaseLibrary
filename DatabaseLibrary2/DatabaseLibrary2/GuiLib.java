/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package databaselibrary2;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.io.*;
import java.util.Scanner;
import databaselibrary2.dbhandler;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Xavier Cadot
 * Runs from this file
 * Contains Gui and calls to the dbhandler
 */
public class GuiLib extends javax.swing.JFrame {
    dbhandler call=new dbhandler();
    /**
     * Creates new form GuiLib
     */
    //initializing tables for the gui
    public GuiLib() {
        initComponents();
         searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "TITLE", "AUTHORS", "AVAILABLE"
            }
        ));  
         borrowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null,null}
            },
            new String [] {
                "Loan ID","ISBN", "Card ID", "NAME"
            }
        ));  
         finesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Card ID","Fine Amount", "PAID"
            }
        ));  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        searchTab = new javax.swing.JPanel();
        searchBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        searchfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cardtext = new javax.swing.JTextField();
        checkOut = new javax.swing.JButton();
        borrowersTab = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CreateID = new javax.swing.JButton();
        ssntext = new javax.swing.JTextField();
        nametext = new javax.swing.JTextField();
        addresstext = new javax.swing.JTextField();
        phonetext = new javax.swing.JTextField();
        finesTab = new javax.swing.JPanel();
        refresh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        finesTable = new javax.swing.JTable();
        paid = new javax.swing.JButton();
        nonPaid = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        searchborrow = new javax.swing.JButton();
        inputReturn = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        borrowTable = new javax.swing.JTable();
        checkIn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchBook.setText("Search");
        searchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookActionPerformed(evt);
            }
        });

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchTable);

        jLabel1.setText("Card ID:");

        cardtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardtextActionPerformed(evt);
            }
        });

        checkOut.setText("Check Out");
        checkOut.setEnabled(false);
        checkOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchTabLayout = new javax.swing.GroupLayout(searchTab);
        searchTab.setLayout(searchTabLayout);
        searchTabLayout.setHorizontalGroup(
            searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(searchTabLayout.createSequentialGroup()
                        .addComponent(searchBook)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchfield))
                    .addGroup(searchTabLayout.createSequentialGroup()
                        .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchTabLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cardtext, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkOut))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        searchTabLayout.setVerticalGroup(
            searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBook)
                    .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cardtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkOut)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search", searchTab);

        jLabel2.setText("Create New Borrower");

        jLabel3.setText("SSN : xxx-xx-xxxx");

        jLabel4.setText("Full Name:");

        jLabel5.setText("Address:  Street City, State");

        jLabel6.setText("Phone: (xxx)xxx-xxxx");

        CreateID.setText("Create");
        CreateID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateIDActionPerformed(evt);
            }
        });

        ssntext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssntextActionPerformed(evt);
            }
        });

        nametext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametextActionPerformed(evt);
            }
        });

        addresstext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addresstextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout borrowersTabLayout = new javax.swing.GroupLayout(borrowersTab);
        borrowersTab.setLayout(borrowersTabLayout);
        borrowersTabLayout.setHorizontalGroup(
            borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowersTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(borrowersTabLayout.createSequentialGroup()
                        .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(9, 9, 9)
                        .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phonetext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nametext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssntext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(borrowersTabLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addresstext, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63))
            .addGroup(borrowersTabLayout.createSequentialGroup()
                .addComponent(CreateID)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        borrowersTabLayout.setVerticalGroup(
            borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowersTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ssntext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nametext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addresstext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(borrowersTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(phonetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CreateID)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Borrowers", borrowersTab);

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        finesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(finesTable);

        paid.setText("Paid");
        paid.setEnabled(false);
        paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidActionPerformed(evt);
            }
        });

        nonPaid.setText("NonPaid");
        nonPaid.setEnabled(false);
        nonPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonPaidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout finesTabLayout = new javax.swing.GroupLayout(finesTab);
        finesTab.setLayout(finesTabLayout);
        finesTabLayout.setHorizontalGroup(
            finesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finesTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(finesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(finesTabLayout.createSequentialGroup()
                        .addGroup(finesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paid)
                            .addGroup(finesTabLayout.createSequentialGroup()
                                .addComponent(refresh)
                                .addGap(18, 18, 18)
                                .addComponent(nonPaid)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        finesTabLayout.setVerticalGroup(
            finesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, finesTabLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(finesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh)
                    .addComponent(nonPaid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paid)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Fines", finesTab);

        searchborrow.setText("Search");
        searchborrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchborrowActionPerformed(evt);
            }
        });

        inputReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputReturnActionPerformed(evt);
            }
        });

        borrowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(borrowTable);

        checkIn.setText("Check IN");
        checkIn.setEnabled(false);
        checkIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(searchborrow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputReturn))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(checkIn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchborrow)
                    .addComponent(inputReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(checkIn)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Return", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //check out buttom
    private void checkOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutActionPerformed
         String temcard=cardtext.getText();
        if(temcard.isEmpty()){
            //error message input cardid
            JOptionPane.showMessageDialog(null,"Enter Card ID");
            return;
        }
        //call querry if id valid
        if(!call.validateecard(temcard)){
            JOptionPane.showMessageDialog(null,"ID NOT VALID");
            return;
        }
        //check for 3 borrowed books
        String qcountcard="SELECT card_id,count(card_id) total " +
        "from book_loans "+
        "where card_id= \""+temcard+"\" AND\n" +
"        Date_in is Null;";
        boolean able=call.cardCount(qcountcard);
        //checks if 3 books are out
        if(!able){
            JOptionPane.showMessageDialog(null,"Has 3 books already");
            return;
        }
        int col=0;
        int row=searchTable.getSelectedRow();
        String isbnV=searchTable.getModel().getValueAt(row, col).toString();
        //checks if they selectd a book
        if(isbnV.isEmpty()){
            JOptionPane.showMessageDialog(null,"Please select book");
            return;
        }
        String avail=searchTable.getModel().getValueAt(row, 3).toString();
        //checks if book is availabe to rent
        if(avail.equals("OUT")){
            JOptionPane.showMessageDialog(null,"Book not Available");
            return;
        }
        System.out.println("gonna insert into db");
        String insertq="insert into book_loans (isbn, card_id, date_out, due_date) values (\""+isbnV+"\", \""+temcard+"\", curdate(), date_add(curdate(), interval 14 day) );";
        System.out.println("insert into db");
         call.callQuerry(insertq);
    }//GEN-LAST:event_checkOutActionPerformed
    //create a new borrower id 
    private void CreateIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateIDActionPerformed
        newBorrower tempB=new newBorrower();
        boolean ssnexist=tempB.insertSsn(ssntext.getText());
        //checks for ssn
        if(ssnexist==true){
            //error ssn already exist
        }
        else{
            tempB.insertName(nametext.getText());
            tempB.insertAddress(addresstext.getText());
            tempB.insertPhone(phonetext.getText());
            tempB.createsId();
            System.out.println("createdSSN");
        }
        //call.callQuerry("850-47-3740");
    }//GEN-LAST:event_CreateIDActionPerformed

    private void cardtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardtextActionPerformed
    //calls the search queery for the table
    private void searchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBookActionPerformed
        String squerry="%"+ searchfield.getText().toUpperCase()+"%";
        //System.out.println(squerry);
        int counts=0;
        counts=call.searchBooksProc(searchTable,squerry );
        if(counts>0){
            this.checkOut.setEnabled(true);
            this.searchTable.setRowSelectionInterval(0, 0);
        }
            
    }//GEN-LAST:event_searchBookActionPerformed

    private void ssntextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssntextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssntextActionPerformed

    private void nametextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametextActionPerformed

    private void addresstextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addresstextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addresstextActionPerformed

    private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
     
         
    }//GEN-LAST:event_searchTableMouseClicked

    private void inputReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputReturnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputReturnActionPerformed
    //checkin book
    private void checkInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInActionPerformed
        int col=0;
        int row=borrowTable.getSelectedRow();
        String loan=borrowTable.getModel().getValueAt(row, col).toString();
        String q="update book_loans set date_in = curdate() where loan_id="+loan+";";
        call.callQuerry(q);
        
    }//GEN-LAST:event_checkInActionPerformed
    //search borrower list
    private void searchborrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchborrowActionPerformed
        this.checkIn.setEnabled(true);
        String qinput="%"+ inputReturn.getText().toUpperCase()+"%";
        call.searchBorrower(borrowTable,qinput);
        
        
    }//GEN-LAST:event_searchborrowActionPerformed
    //refreshes fines
    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
    //read in data that's to be inserted
    List<String> temp=new ArrayList<String>();
    String qsumloans= "Select card_id, Sum(fine_amt), paid"+
    " from book_loans As b, fines As f"+
    " where b.loan_id=f.loan_id"+
    " Group by card_id;";
    String qinsertintofines= "select loan_id, IF(date_in is null , " +
    "(datediff(due_date, curdate())* -0.25 ), "+
    "datediff(due_date, date_in)*-0.25) AS fines, " +
    "DUE_DATE, date_IN, curdate() " +
    "from book_loans " +
    "where datediff(date_in, due_date) > 0 or (date_in is null AND datediff(curdate(), due_date) > 0) ";
    //call fines ready for insert
    temp=call.readfines(qinsertintofines);
    int i=0;
    String templid="";
    while(i< temp.size()){
        templid=temp.get(i);
        // loan existed
        if(call.checkloanId(templid)){
            call.callQuerry("Update fines  set FINE_AMT="+temp.get(i+1)+ "where loan_id="+templid);
            i++;
            System.out.println("did exist");
        }
        //loan doesnt exist
        else{
            call.callQuerry("Insert into fines (loan_id, fine_amt) Values ("+templid+","+temp.get(i+1)+")");
            i++;
            System.out.println("didnt exist");
        }
        i++;
    }
    call.searchFines(finesTable, qsumloans);
    this.paid.setEnabled(true);
    this.nonPaid.setEnabled(true);
    }//GEN-LAST:event_refreshActionPerformed
    //pay for fine buttom
    private void paidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidActionPerformed
        int col=0;
        int row=finesTable.getSelectedRow();
        String rowid=finesTable.getModel().getValueAt(row, col).toString();
        String qcheck="Select card_id " +
        "from book_loans " +
        "where date_in is null AND "+
        "card_id=\'"+rowid+"\'";
        //checks if books are turned in
        if(!call.checkcardid(qcheck)){
        //books turned in allowed to pay
        
        String q="Select loan_id from book_loans where card_id=\'"+rowid+"\';";
        System.out.println(q);
        call.updatepaid(q);
        }
        else{
               //book not turned in fail window 
                JOptionPane.showMessageDialog(null,"Book not turned in yet");
                }
    }//GEN-LAST:event_paidActionPerformed
    //other refresh that contain fines that havent been paid yet
    private void nonPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonPaidActionPerformed
       
        String qsumloans= "Select card_id, Sum(fine_amt), paid"+
        " from book_loans As b, fines As f"+
        " where b.loan_id=f.loan_id AND paid is null"+
        " Group by card_id;";
        call.searchFines(finesTable, qsumloans);
    
    }//GEN-LAST:event_nonPaidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiLib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiLib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiLib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiLib.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //checkDB();
        //new dbhandler().callQuerry("use Library");
        //readinBooks();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiLib().setVisible(true);
                
            }
        });
    }
    

        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateID;
    private javax.swing.JTextField addresstext;
    private javax.swing.JTable borrowTable;
    private javax.swing.JPanel borrowersTab;
    private javax.swing.JTextField cardtext;
    private javax.swing.JButton checkIn;
    private javax.swing.JButton checkOut;
    private javax.swing.JPanel finesTab;
    private javax.swing.JTable finesTable;
    private javax.swing.JTextField inputReturn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nametext;
    private javax.swing.JButton nonPaid;
    private javax.swing.JButton paid;
    private javax.swing.JTextField phonetext;
    private javax.swing.JButton refresh;
    private javax.swing.JButton searchBook;
    private javax.swing.JPanel searchTab;
    private javax.swing.JTable searchTable;
    private javax.swing.JButton searchborrow;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTextField ssntext;
    // End of variables declaration//GEN-END:variables
}
